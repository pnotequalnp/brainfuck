name: "Release"

on:
  push:
    tags:
      - v*

jobs:
  build-binary:
    name: Build Executable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.4.0

    - name: Install Nix
      uses: cachix/install-nix-action@v15
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          extra-substituters = file://${{ github.workspace }}/store-cache?trusted=true

    - name: Set Up Store Cache
      uses: actions/cache@v2
      with:
        path: store-cache
        key: ghc8107

    - name: Generate Executable
      run: nix build .#default -L

    - name: Package Executable
      run: |
        cp result/bin/brainfuck brainfuck
        nix shell nixpkgs#patchelf
        sudo patchelf brainfuck --set-interpreter /usr/lib64/ld-linux-x86-64.so.2
        tar -czvf brainfuck-linux-x86_64.tar.gz brainfuck

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: brainfuck-linux-x86_64.tar.gz

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.4.0

    - name: Install Nix
      uses: cachix/install-nix-action@v15
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          extra-substituters = file://${{ github.workspace }}/store-cache?trusted=true

    - name: Set Up Store Cache
      uses: actions/cache@v2
      with:
        path: store-cache
        key: ghc8107

    - name: Generate Documentation
      run: nix build .#default.doc -L

    - name: Prepare Documentation
      run: cp -r ./result-doc/share/doc/*/html .

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: haddock
        path: html

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-binary]
    steps:
    - name: Download Artifacts
      id: download
      uses: actions/download-artifact@v3
      with:
        name: executable

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{steps.download.outputs.download-path}}/brainfuck-linux-x86_64.tar.gz
        fail_on_unmatched_files: true

  upload-docs:
    name: Upload Documentation
    runs-on: ubuntu-latest
    needs: [build-docs]
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: haddock
        path: html

    - name: Upload
      if: success()
      uses: crazy-max/ghaction-github-pages@v2.6.0
      with:
        build_dir: html
        target_branch: docs
        keep_history: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
